// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/CPU.hdl

CHIP CPU {
    IN  inM[16],         // M value input  (M = contents of RAM[A])
        instruction[16], // Instruction for execution
        reset;           // Signals whether to re-start the current
                         // program (reset==1) or continue executing
                         // the current program (reset==0).

    OUT outM[16],        // M value output
        writeM,          // Write to M? 
        addressM[15],    // Address in data memory (of M)
        pc[15];          // address of next instruction

    PARTS:
    // numbers based on markings in cpu_diagram.png

    // 1
    // decode A or C instruction
    // wheter the ALU will operate on A register or memory input
    DMux(in=true, sel=instruction[15], 
        a=a_instr, b=c_instr);
        there's only one out?

    // 2
    Mux16();

    // 3
    ARegister(in=something, load=something, 
        out=outA);

    // 4
    DRegister(in=alu_out, load=something, 
        out=outD);

    // 5
    // A or M based on a bit
    Mux16(a=inM, b=outA, sel=something, 
        out=outM5);

    // 6
    ALU(x=dout, y=outM5, zx, nx, zy, ny, f, no, 
        out, zr, ng);

    // 7
    PC(in= , load= , inc=, reset=reset, 
        out=pc);
