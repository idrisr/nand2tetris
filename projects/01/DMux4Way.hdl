// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // nots for later
    Not(in=sel[0]     , out=notsel0);
    Not(in=sel[1]     , out=notsel1);

    // sel==00
    And(a=notsel0     , b=notsel1     , out=sela);
    And(a=sela        , b=in          , out=a);

    // sel==01
    // This makes no sense to me. Seems B and C are flipped
    // But it gets the correct answer
    And(a=sel[0]      , b=notsel1     , out=selb);
    And(a=selb        , b=in          , out=b);

    // sel==10
    And(a=notsel0     , b=sel[1]      , out=selc);
    And(a=selc        , b=in          , out=c);

    // sel=11
    And(a=sel[0]      , b=sel[1]      , out=seld);
    And(a=seld        , b=in          , out=d);
}
